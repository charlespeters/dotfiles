"==============================
"
"
"
" Vim & NeoVim Runtime Configuration
"
"
"==============================

" The following settings are for Vim not Neovim
set nocompatible              " be iMproved, required
filetype off                  " required

"==============================
" Plugins
"==============================

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Vundle manages Vundle, required
Plugin 'gmarik/Vundle.vim'

" Colors
Plugin 'charlespeters/ganymede.vim'
Plugin 'mhartington/oceanic-next'
Plugin 'whatyouhide/vim-gotham'

"" HTML
Plugin 'othree/html5.vim'
Plugin 'juvenn/mustache.vim'
Plugin 'tpope/vim-liquid'
Plugin 'tpope/vim-markdown'

"" CSS
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'lilydjwg/colorizer', { 'for': ['css', 'scss', 'postcss.css', 'html', 'javascript', 'javascript.jsx'] }
Plugin 'JulesWang/css.vim'
Plugin 'stephenway/postcss.vim'

"" Javascript
Plugin 'othree/yajs.vim'
Plugin 'othree/es.next.syntax.vim'
Plugin 'mxw/vim-jsx'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'sheerun/vim-json'

"" Elixir
Plugin 'slashmili/alchemist.vim'
Plugin 'elixir-lang/vim-elixir'

" Utilities
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plugin 'junegunn/fzf.vim'
Plugin 'junegunn/vim-emoji'
Plugin 'junegunn/limelight.vim'
Plugin 'tpope/vim-obsession'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-eunuch'
Plugin 'spf13/vim-autoclose'
Plugin 'vim-airline/vim-airline'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'tomtom/tcomment_vim'
Plugin 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'  }
Plugin 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
Plugin 'neomake/neomake'
Plugin 'sbdchd/neoformat'
Plugin 'reedes/vim-pencil'
Plugin 'mattn/emmet-vim' " TODO: Consider removing
Plugin 'nathanaelkane/vim-indent-guides' " TODO: Consider removing

call vundle#end()            " required
filetype plugin indent on    " required


"==============================
" Configuration
"==============================

" Default Settings

syntax enable

set shell=$SHELL
set number
set background=dark
set numberwidth=5
set relativenumber
set smartindent
set cursorline
set showcmd
set showmatch
set ruler
set mouse=a

" Search Settings

set incsearch
set hlsearch
set ignorecase
set smartcase

" Window Splits

set splitright
set splitbelow

" Tabs & Spaces

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set laststatus=2
set cc=95

" Colors Themes & Font Settings

colorscheme ganymede
set termguicolors
set t_Co=256
hi NonText ctermbg=NONE guibg=NONE
hi Normal ctermbg=NONE guibg=NONE

" Highlights

highlight SignColumn ctermfg=DarkBlue ctermbg=NONE
highlight SignColumnNR ctermbg=black
highlight LineNr ctermfg=DarkGrey ctermbg=NONE
highlight CursorLineNR ctermbg=NONE ctermfg=Grey cterm=bold
highlight CursorLine ctermbg=NONE cterm=NONE
highlight Comment cterm=italic cterm=NONE

" Clipboard

set clipboard=unnamed
set clipboard+=unnamedplus


"==============================
" Plugin Settings
"==============================

" Limelight

let g:limelight_conceal_ctermfg = 'black'
let g:limelight_conceal_guifg = 'black'

" Airline

let g:airline_theme='ganymede'
let g:airline_left_sep=' '
let g:airline_right_sep=' '
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 0
let g:airline#extensions#tabline#buffer_idx_mode = 0
let g:airline#extensions#syntastic#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tagbar#enabled = 0
let g:airline_section_y = 0
let g:airline_section_z = airline#section#create(['%{ObsessionStatus(''$'', '''')}', 'windowswap', '%3p%% ', 'linenr', ':%3v '])

" Gitgutter

call gitgutter#highlight#define_highlights()
highlight GitGutterAdd ctermbg=black ctermfg=green
highlight GitGutterChange ctermbg=black ctermfg=yellow
highlight GitGutterDelete ctermbg=black ctermfg=red
highlight GitGutterChangeDelete ctermbg=black ctermfg=yellow

let g:gitgutter_max_signs = 500

" if emoji#available()
"   let g:gitgutter_sign_added = emoji#for('small_blue_diamond')
"   let g:gitgutter_sign_modified = emoji#for('small_orange_diamond')
"   let g:gitgutter_sign_removed = emoji#for('small_red_triangle')
"   let g:gitgutter_sign_modified_removed = emoji#for('collision')
" endif

" Emmet

" let g:user_emmet_leader_key='<C-Z>'
let g:user_emmet_install_global = 0
autocmd FileType html,mustache,jsx,css EmmetInstall

" Syntastic Checkers

" Deoplete.nvim
" Deoplete-ternjs

let g:deoplete#enable_at_startup = 1
let g:SuperTabDefaultCompletionType = "<C-n>"
let g:tern_request_timeout = 1
let g:tern_show_signature_in_pum = 0
set completeopt-=preview

" Neoformat

let g:neoformat_enabled_javascript = ['prettier']
let g:neoformat_enabled_jsx = ['prettier']
autocmd FileType javascript.jsx setlocal formatprg=prettier\ --stdin\ --parser\ flow\ --single-quote\ --no-semi\ --use-tabs\ --jsx-bracket-same-line

let g:neoformat_try_formatprg = 1

autocmd BufWritePre *.js Neoformat

" Neomake

let g:neomake_warning_sign = {
      \ 'text': 'W',
      \ 'texthl': 'WarningMsg',
      \ }
let g:neomake_error_sign = {
      \ 'text': 'E',
      \ 'texthl': 'ErrorMsg',
      \ }
let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_jsx_enabled_makers = ['eslint']
let g:neomake_css_enabled_makers = ['stylelint']
let g:neomake_json_enabled_makers = ['jsonlint']

autocmd! BufWritePost * Neomake

" Indent Guides

hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=darkgrey

" Not Sure

let g:enable_bold_font=1
let g:xml_syntax_folding = 1

" Markdown

let g:markdown_fenced_languages = ['html', 'css=postcss.css', 'js=javascript.jsx']

"==============================
" GUI Vim Settings
"==============================

" For NeoVim

let g:python3_host_prog = '/usr/local/bin/python3'
let g:loaded_python_provider = 1

" Remaps Esc to leave Terminal mode
tnoremap <Esc> <C-\><C-n>

" VimR Settings

if has('gui_vimr')
  if (has("termguicolors"))
    set termguicolors
  endif
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  set background=dark
  colorscheme OceanicNext
  let g:airline_theme='oceanicnext'
  highlight Comment cterm=italic
  highlight Comment gui=italic
endif

"==============================
" File Types
"==============================

autocmd BufNewFile,BufRead *.css set filetype=postcss.css
autocmd BufNewFile,BufRead *.hbs set filetype=mustache.html
autocmd BufNewFile,BufRead *.md  set filetype=markdown

let g:jsx_ext_required = 0

"==============================
" Mappings
"==============================

" Leader

let mapleader = ","

" Save

map <leader>S :w<CR>

" FZF

nnoremap <C-t> :Files<CR>
inoremap <C-t> <ESC>:Files<CR>

" tComment

map <leader>c <c-_><c-_>

" No Remap for Arrow Keys

inoremap <ScrollWheelUp> <Nop>
inoremap <ScrollWheelDown> <Nop>
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>
